#ifndef INTEGRAND_TTH_3L1TAU_LO_H
#define INTEGRAND_TTH_3L1TAU_LO_H

#include <string> // std::string

#include "tthAnalysis/tthMEM/interface/me_tth_3l1tau_mg5.h" // me_tth_3l1tau_lo_mg5
#include "tthAnalysis/tthMEM/interface/MeasuredEvent_3l1tau.h" // tthMEM_3l_1tau::MeasuredEvent

#include "LHAPDF/LHAPDF.h" // LHAPDF::PDF

namespace tthMEM
{
  /**
   * @brief MEM integrand of the process tth, h->tautau, 3l1tau channel (LO)
   *
   * @todo
   *   - add methods for setting transfer functions
   *   - implement the integrand
   */
  class integrand_tth_3l1tau
  {
  public:
    /**
     * @brief Simple constructor
     * @param sqrtS            Center of momentum energy
     * @param pdfName          Name of parton distribution function (pdf)
     * @param madgraphFileName Full path to madgraph5 file (param_card.dat)
     */
    integrand_tth_3l1tau(double sqrtS,
                         const std::string & pdfName,
                         const std::string & madgraphFileName);
    ~integrand_tth_3l1tau();

    /**
     * @brief Set measured/reconstructed event as an input
     * @param measuredEvent The event
     */
    void
    setInputs(const MeasuredEvent_3l1tau & measuredEvent);

    /* simple setters */
    void setIdxCosTheta1   (int idx);
    void setIdxVarphi1     (int idx);
    void setIdxCosTheta2   (int idx);
    void setIdxVarphi2     (int idx);
    void setIdxZ1          (int idx);
    void setIdxTh          (int idx);
    void setIdxPhi1        (int idx);
    void setIdxPhiInv      (int idx);
    void setIdxMinvSquared (int idx);

    /**
     * @brief Evaluates the integrand
     * @param x Array of sampled values (generated by the integration lib)
     * @return Probability
     */
    double
    eval(const double * x) const;

    static const integrand_tth_3l1tau * gIntegrand;
    ///< static pointer to this instance

  protected:
    double sqrtS_;
    double s_;

    LHAPDF::PDF * pdf_;

    mutable me_tth_3l1tau_mg5 me_madgraph_;
    ///< @note mutable members can be modified by a const function (e.g. eval())
    bool me_madgraph_initialized_;

    const MeasuredEvent_3l1tau * measuredEvent_;

    int idxCosTheta1_;
    int idxVarphi1_;
    int idxCosTheta2_;
    int idxVarphi2_;
    int idxZ1_;
    int idxTh_;
    int idxPhi1_;
    int idxPhiInv_;
    int idxMinvSquared_;

    double * mgGluon1p4_;
    double * mgGluon2p4_;
    double * mgBjet1p4_;
    double * mgLeptonFromBjet1p4_;
    double * mgNeutrinoFromBjet1p4_;
    double * mgBjet2p4_;
    double * mgLeptonFromBjet2p4_;
    double * mgNeutrinoFromBjet2p4_;
    double * mgTau1p4_;
    double * mgTau2p4_;
    mutable std::vector<double *> mgMomenta_;
  };
}

#endif // INTEGRAND_TTH_3L1TAU_LO_H
